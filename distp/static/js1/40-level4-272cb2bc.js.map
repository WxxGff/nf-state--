{"version":3,"file":"40-level4-272cb2bc.js","sources":["../../../src/views/state-level/state-level4.ts","../../../src/views/state-level/42-level4-2.vue","../../../src/views/state-level/40-level4.vue"],"sourcesContent":["\r\nimport type { InjectionKey } from 'vue'\r\n\r\nimport { defineStore, useStore } from '../../../lib/main'\r\nimport type { IState } from '../../../lib/types/type'\r\nimport type { StateGA } from '../../types/typs'\r\n\r\n// 定义状态\r\nconst flag = Symbol('level4') as InjectionKey<string>\r\n\r\n/**\r\n * 注册局部状态，父组件使用 provide\r\n * * 数据列表用\r\n * @returns\r\n */\r\nconst regState = (): StateGA & IState => {\r\n\r\n  const state1 = defineStore<StateGA>(flag, {\r\n    state: (): StateGA => {\r\n      return {\r\n        name: '超严级别',\r\n        age: 18\r\n      }\r\n    },\r\n    getters: {\r\n      nameTest(): string {\r\n        return this.name + '_通过 getter 获取'\r\n      }\r\n    },\r\n    actions: {\r\n      actionTest() {\r\n        this.name = 'js 文件里 的 action 修改了name'\r\n      }\r\n    }\r\n  },{level: 4})\r\n\r\n  return state1\r\n}\r\n  \r\n/**\r\n * 子组件用 inject 获取状态\r\n * @returns\r\n */\r\nconst getState = (): StateGA & IState => {\r\n  return useStore<StateGA & IState>(flag)\r\n}\r\n\r\nexport {\r\n  regState,\r\n  getState\r\n}","<template>\r\n  安全等级 —— 子组件 —— level 4。<br><br>\r\n  其他组件不可以变更状态！<br><br>\r\n \r\n  数据：{{state1}}<br><br>\r\n  getter：{{state1.nameTest}}<br><br>\r\n  \r\n  <hr>\r\n  <el-button type=\"\" @click=\"state1.name='改属性'\"> 修改属性</el-button> 其他组件不让改<br>\r\n  <el-button type=\"\" @click=\"state1.$state = {name: '$state 修改'}\"> $state 修改属性</el-button> 其他组件不让改 <br>\r\n  <el-button type=\"\" @click=\"state1.$patch({name: '模板改 $patch'})\"> patch 修改属性</el-button> 其他组件不让改 <br>\r\n  <el-button type=\"\" @click=\"state1.actionTest()\"> actionTest 修改属性</el-button> 其他组件不让改 <br>\r\n  <el-button type=\"\" @click=\"state1.$reset()\"> 重置</el-button>  <br>\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n  // 获取状态\r\n  import { getState } from './state-level4'\r\n\r\n  const state1 = getState()\r\n\r\n  console.log(state1)\r\n   \r\n</script>","<template>\r\n  安全等级 —— level 4。<br><br>\r\n  <br><br>\r\n  只能在引入状态的组件里变更状态，其他组件里不能变更状态！\r\n  \r\n  <hr>\r\n  数据：{{state1}}<br><br>\r\n  getter：{{state1.nameTest}}<br><br>\r\n  \r\n  <el-input\r\n    v-model=\"stateText\"\r\n    type=\"textarea\"\r\n    :autosize=\"{ minRows: 5, maxRows: 10 }\"\r\n  ></el-input>\r\n  \r\n  <hr>\r\n  <el-button type=\"\" @click=\"state1.name='改属性'\"> 修改属性</el-button> 引入组件可以改 <br>\r\n  <el-button type=\"\" @click=\"state1.$state = {name: '$state 修改'}\"> $state 修改属性</el-button> 引入组件可以改 <br>\r\n  <el-button type=\"\" @click=\"state1.$patch({name: '模板改 $patch'})\"> $patch 修改属性</el-button> 引入组件可以改 <br>\r\n  <el-button type=\"\" @click=\"state1.actionTest()\"> actionTest 修改属性</el-button> 引入组件可以改 <br>\r\n  <el-button type=\"\" @click=\"state1.$reset()\"> 重置</el-button>  <br>\r\n\r\n  <hr>\r\n  <son-state></son-state>\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n  import { computed } from 'vue'\r\n  import sonState from './42-level4-2.vue'\r\n\r\n  // 定义状态\r\n  import { regState } from './state-level4'\r\n\r\n  const state1 = regState()\r\n\r\n  console.log(state1)\r\n\r\n  const stateText = computed(() => JSON.stringify(state1, null , 2))\r\n   \r\n</script>"],"names":[],"mappings":"4VAQA,KAAM,GAAO,OAAO,QAAQ,EAOtB,EAAW,IAEA,EAAqB,EAAM,CACxC,MAAO,IACE,EACL,KAAM,2BACN,IAAK,EAAA,GAGT,QAAS,CACP,UAAmB,CACjB,MAAO,MAAK,KAAO,mCACrB,CACF,EACA,QAAS,CACP,YAAa,CACX,KAAK,KAAO,4DACd,CACF,CAAA,EACA,CAAC,MAAO,CAAA,CAAE,EASR,EAAW,IACR,EAA2B,CAAI,q4BCxBtC,KAAM,GAAS,IAEf,eAAQ,IAAI,CAAM,ywDCYlB,KAAM,GAAS,IAEf,QAAQ,IAAI,CAAM,EAEZ,KAAA,GAAY,EAAS,IAAM,KAAK,UAAU,EAAQ,KAAO,CAAC,CAAC"}