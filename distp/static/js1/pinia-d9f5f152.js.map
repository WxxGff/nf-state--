{"version":3,"file":"pinia-d9f5f152.js","sources":["../../../src/views/pinia/object.ts","../../../src/views/pinia/son4.vue","../../../src/views/pinia/son3.vue","../../../src/views/pinia/count.js","../../../src/views/pinia/son1.vue","../../../src/views/pinia/count2.js","../../../src/views/pinia/son2.vue","../../../src/views/pinia/pinia.vue"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\ninterface Person {\r\n  isLogin: boolean,\r\n  name: string, //\r\n  age: number,\r\n  roles: Array<string>\r\n}\r\n\r\nexport const usePersonStore = defineStore('objectTest', {\r\n  state: (): Person => {\r\n    return {\r\n      isLogin: true,\r\n      name: 'jyk',\r\n      age: 18,\r\n      roles: [\r\n        '11',\r\n        '22'\r\n      ]\r\n    }\r\n  },\r\n  // 也可以这样定义状态\r\n  // state: () => ({ count: 0 })\r\n  actions: {\r\n    nameAction() {\r\n      this.name += '11'\r\n    }\r\n  },\r\n  getters: {\r\n    ageTest(state) {\r\n      // 会有代码自动补全!\r\n      return state.age += 100\r\n    }\r\n  }\r\n})","<template>\r\n{{counter}}<br>\r\n\r\n  <button @click=\"update\">更新</button>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { defineStore } from 'pinia'\r\n\r\nconst useCounterStore = defineStore('counter23', {\r\n  state: () => {\r\n    return []\r\n  },\r\n  // 也可以这样定义状态\r\n  // state: () => ({ count: 0 })\r\n  actions: {\r\n    increment() {\r\n      this.$state = [1, 2, 3]\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<script setup>\r\n  \r\n  const counter = useCounterStore()\r\n  \r\n  const update = () => {\r\n    // counter.count++\r\n    // 编辑器会有代码提示 ✨\r\n    // counter.$patch({ count: counter.count + 1 })\r\n    // 也可以使用action来代替\r\n    counter.increment()\r\n  }\r\n  \r\n\r\n</script>","<template>\r\n{{counter}}<br>\r\n\r\n  <button @click=\"update\">更新</button>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { defineStore } from 'pinia'\r\n\r\nconst useCounterStore = defineStore('counter', {\r\n  state: () => {\r\n    return { count1: 0, a3:'a3定义的' }\r\n  },\r\n  // 也可以这样定义状态\r\n  // state: () => ({ count: 0 })\r\n  actions: {\r\n    increment() {\r\n      this.count1 ++\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<script setup>\r\n  \r\n  const counter = useCounterStore()\r\n  \r\n  const update = () => {\r\n    counter.count1++\r\n    // 编辑器会有代码提示 ✨\r\n    counter.$patch({ count: counter.count1 + 1 })\r\n    // 也可以使用action来代替\r\n    counter.increment()\r\n  }\r\n  \r\n\r\n</script>","import { defineStore } from 'pinia'\r\n\r\nconst testPromie = () => {\r\n  return new Promise((fun) => {\r\n    setTimeout(() => {\r\n      fun(100)\r\n    }, 500)\r\n  })\r\n}\r\n\r\n\r\nexport const useCounterStore = defineStore('counter', {\r\n  state: () => {\r\n    return { count22: 0, name: '' }\r\n  },\r\n  // 也可以这样定义状态\r\n  // state: () => ({ count: 0 })\r\n  actions: {\r\n    increment() {\r\n      this.count22 ++\r\n      return 'increment000'\r\n    },\r\n    async loadData(val, state) {\r\n      const foo = await testPromie()\r\n      this.count22 += foo\r\n      this.name = 'async 赋值，，' + new Date().valueOf()\r\n    },\r\n    loadData2(val, state) {\r\n      testPromie().then((val) => {\r\n        this.count22 += val\r\n        this.name = '异步赋值，，' + new Date().valueOf()\r\n      })\r\n    }\r\n  },\r\n})","<template>\r\n{{counter}}<br>\r\n\r\n  <button @click=\"update('async')\">更新 async </button>\r\n  <button @click=\"counter.loadData2('then')\">更新 then </button>\r\n  <button @click=\"counter.increment('increment')\"> increment </button>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { useCounterStore } from './count.js'\r\nimport { createPinia } from 'pinia'\r\n\r\n</script>\r\n\r\n<script setup>\r\n  \r\n  const counter = useCounterStore()\r\n  \r\n  const update = () => {\r\n    // counter.count++\r\n    // 编辑器会有代码提示 ✨\r\n    // counter.$patch({ count: counter.count + 1 })\r\n    // 也可以使用action来代替\r\n    // counter.increment('22')\r\n    counter.loadData('55')\r\n  }\r\n\r\n  counter.$onAction(\r\n  ({\r\n    name, // name of the action\r\n    store, // store instance, same as `someStore`\r\n    args, // array of parameters passed to the action\r\n    after, // hook after the action returns or resolves\r\n    onError, // hook if the action throws or rejects\r\n  }) => {\r\n    // a shared variable for this specific action call\r\n    const startTime = Date.now()\r\n    // this will trigger before an action on `store` is executed\r\n    // console.log(`开始调用 \"${name}\"，参数：[${args.join(', ')}].`)\r\n\r\n    // this will trigger if the action succeeds and after it has fully run.\r\n    // it waits for any returned promised\r\n    after((result) => {\r\n      console.log(\r\n        `\"${name}\" 结束 ${Date.now() - startTime}ms。\\n结果: ${result}.\\n`\r\n      )\r\n    })\r\n\r\n    // this will trigger if the action throws or returns a promise that rejects\r\n    onError((error) => {\r\n      console.warn(\r\n        `Failed \"${name}\" after ${Date.now() - startTime}ms.\\nError: ${error}.`\r\n      )\r\n    })\r\n  }\r\n\r\n)\r\n  \r\n\r\n  counter.$subscribe((val) => {\r\n    console.log('\\n counter - subscribe --------------')\r\n    console.log(val.storeId, val.events)\r\n\r\n    // react to store changes\r\n  })\r\n\r\n</script>","import { defineStore } from 'pinia'\r\n\r\n// const sy = Symbol('testPinia')\r\n\r\nexport const useCounterStore = defineStore('counter', {\r\n  state: () => {\r\n    return { count22: 0 }\r\n  },\r\n  // 也可以这样定义状态\r\n  // state: () => ({ count: 0 })\r\n  actions: {\r\n    increment() {\r\n      this.count22 ++\r\n    },\r\n  },\r\n})","<template>\r\n{{counter}}<br>\r\n\r\n  <button @click=\"update\">更新</button>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { useCounterStore } from './count2.js'\r\n\r\n\r\n</script>\r\n\r\n<script setup>\r\n  \r\n  const counter = useCounterStore()\r\n  \r\n  const update = () => {\r\n    counter.count++\r\n    // 编辑器会有代码提示 ✨\r\n    counter.$patch({ count: counter.count + 1 })\r\n    // 也可以使用action来代替\r\n    counter.increment()\r\n  }\r\n  \r\n\r\n</script>","<template>\r\n  {{xiaoming}}<br>\r\n  {{xiaoming.age}}<br><br>\r\n  {{xiaoming.ageTest}}<br><br>\r\n  解构：{{toref}}<br><br>\r\n\r\n  <div v-for=\"(item, key, index) in xiaoming\" :key=\"index\">\r\n    {{index}} -- {{key}}: {{item}}\r\n  </div>\r\n  <br><br>\r\n  <button @click=\"start\">开始</button><br><br>\r\n  <button @click=\"update\">更新</button>\r\n  <button @click=\"reset\">重置</button>\r\n\r\n  <hr>\r\n  <hr>\r\n  <!---->\r\n  <son1></son1>\r\n  <hr>\r\n  <son2></son2>\r\n  \r\n  <hr>\r\n  <son3></son3>\r\n  <hr>\r\n  <son4></son4>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import * as pinia  from 'pinia'\r\n  import { toRefs } from 'vue'\r\n  import { usePersonStore } from './object'\r\n\r\n  import son4 from './son4.vue'\r\n  import son3 from './son3.vue'\r\n\r\n  import son1 from './son1.vue'\r\n  import son2 from './son2.vue'\r\n\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n\r\n  console.log(pinia)\r\n   \r\n  console.time('usePersonStore实例化用时')\r\n  const xiaoming = usePersonStore()\r\n  console.timeEnd('usePersonStore实例化用时')\r\n\r\n  xiaoming.$patch({\r\n\r\n  })\r\n\r\n  // 解构\r\n  const toref = toRefs(xiaoming)  \r\n  console.log('toref:')\r\n  console.log(Object.keys(toref))\r\n\r\n  // const toref3 = storeToRefs(xiaoming)\r\n  // console.log('toref3:')\r\n  // console.log(Object.keys(toref3))\r\n\r\n  const start = () => {\r\n    console.log('\\n xiaoming:')\r\n    console.dir(xiaoming)\r\n    console.log('xiaoming - keys :')\r\n    console.log(Object.keys(xiaoming))\r\n    \r\n    console.log('xiaoming - for in :')\r\n    for (const key in xiaoming){\r\n      console.log(key)\r\n    }\r\n  }\r\n  \r\n  const update = () => {\r\n    xiaoming.nameAction()\r\n  }\r\n\r\n  const reset = () => {\r\n    xiaoming.$reset()\r\n  }\r\n  \r\n\r\n</script>"],"names":["useCounterStore","pinia"],"mappings":"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"}