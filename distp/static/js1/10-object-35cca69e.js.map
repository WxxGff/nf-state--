{"version":3,"file":"10-object-35cca69e.js","sources":["../../../src/views/state-base/10-object.vue"],"sourcesContent":["<template>\r\n  对象基类的测试。<br><br>\r\n \r\n  对象基类：{{person}}<br><br>\r\n  <div v-for=\"(item, key) in person\" :key=\"key\">\r\n    {{key}}：{{item}}\r\n  </div>\r\n  <el-input\r\n    v-model=\"personText\"\r\n    type=\"textarea\"\r\n    :autosize=\"{ minRows: 2, maxRows: 9 }\"\r\n  ></el-input>\r\n  <hr>\r\n  <el-button @click=\"click1\">整体赋值</el-button> <br><br>\r\n  <el-button @click=\"click2\">部分赋值</el-button> <br><br>\r\n\r\n  <el-button @click=\"click10\">第二层对象 state 赋值</el-button> <br><br>\r\n  <el-button @click=\"click11\">第二层对象 patch 赋值</el-button> <br><br>\r\n\r\n  <el-button @click=\"click12\">第二层数组 state 赋值</el-button> <br><br>\r\n  <el-button @click=\"click13\">第二层数组 patch 赋值</el-button> <br><br>\r\n\r\n  <el-button @click=\"person.$reset\">重置（不支持）</el-button> <br><br>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n  import { computed, reactive } from 'vue'\r\n  import { BaseObject } from '../../../lib/main'\r\n\r\n  const _person = new BaseObject(() => {\r\n    return {\r\n      name: '第一层属性',\r\n      info: {\r\n        a1: '第二层属性'\r\n      },\r\n      list: [\r\n        {\r\n          name: 'jyk1'\r\n        },\r\n        {\r\n          name: 'jyk2'\r\n        },\r\n        \r\n      ]\r\n    }\r\n  })\r\n\r\n  const person = reactive(_person)\r\n\r\n  // 显示结构\r\n  console.log('person：', person)\r\n\r\n  // keys\r\n  console.log('person.keys：', Object.keys(person))\r\n\r\n  // 遍历\r\n  person.$forEach((item, key, index) => {\r\n    console.log(index, key, item)\r\n  })\r\n\r\n  // 序列化\r\n  const personText = computed<string>(() => JSON.stringify(person, null ,2))\r\n  \r\n  // $state\r\n  const click1 = () => {\r\n    person.$state = {\r\n      name: '第一层属性11',\r\n      info: {\r\n        a1: '第二层属性22'\r\n      },\r\n      list: [\r\n        {\r\n          name: 'jyk133'\r\n        },\r\n        {\r\n          name: 'jyk244'\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  // $patch\r\n  const click2 = () => {\r\n    person.$patch({\r\n      name: '第一层属性1111',\r\n      info: {\r\n        a1: '第二层属性2222'\r\n      },\r\n      list: [\r\n        {\r\n          name: 'jyk13333'\r\n        },\r\n        {\r\n          name: 'jyk24444'\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  // 第二层 对象\r\n  const click10 = () => {\r\n    person.info.$state = {\r\n      a1: '改第二层 —— state'\r\n    }\r\n  }\r\n  const click11 = () => {\r\n    person.info.$patch({\r\n      a1: '改第二层 —— patch'\r\n    })\r\n  }\r\n\r\n  // 第二层 数组\r\n  const click12 = () => {\r\n    person.list.$state = [\r\n      {\r\n        name: '第二层数组 —— state'\r\n      }\r\n    ]\r\n  }\r\n  const click13 = () => {\r\n    person.list.$patch([\r\n      {\r\n        name: '第二层数组 —— patch'\r\n      }\r\n    ])\r\n  }\r\n\r\n</script>"],"names":[],"mappings":"mvCA6BQ,KAAA,GAAU,GAAI,GAAW,IACtB,EACL,KAAM,iCACN,KAAM,CACJ,GAAI,gCACN,EACA,KAAM,CACJ,CACE,KAAM,MACR,EACA,CACE,KAAM,MACR,CAEF,CAAA,EAEH,EAEK,EAAS,EAAS,CAAO,EAGvB,QAAA,IAAI,eAAW,CAAM,EAG7B,QAAQ,IAAI,oBAAgB,OAAO,KAAK,CAAM,CAAC,EAG/C,EAAO,SAAS,CAAC,EAAM,EAAK,IAAU,CAC5B,QAAA,IAAI,EAAO,EAAK,CAAI,CAAA,CAC7B,EAGK,KAAA,GAAa,EAAiB,IAAM,KAAK,UAAU,EAAQ,KAAM,CAAC,CAAC,EAGnE,EAAS,IAAM,CACnB,EAAO,OAAS,CACd,KAAM,mCACN,KAAM,CACJ,GAAI,kCACN,EACA,KAAM,CACJ,CACE,KAAM,QACR,EACA,CACE,KAAM,QACR,CACF,CAAA,CACF,EAII,EAAS,IAAM,CACnB,EAAO,OAAO,CACZ,KAAM,qCACN,KAAM,CACJ,GAAI,oCACN,EACA,KAAM,CACJ,CACE,KAAM,UACR,EACA,CACE,KAAM,UACR,CACF,CAAA,CACD,CAAA,EAIG,EAAU,IAAM,CACpB,EAAO,KAAK,OAAS,CACnB,GAAI,6CAAA,CACN,EAEI,EAAU,IAAM,CACpB,EAAO,KAAK,OAAO,CACjB,GAAI,6CAAA,CACL,CAAA,EAIG,EAAU,IAAM,CACpB,EAAO,KAAK,OAAS,CACnB,CACE,KAAM,mDACR,CAAA,CACF,EAEI,EAAU,IAAM,CACpB,EAAO,KAAK,OAAO,CACjB,CACE,KAAM,mDACR,CAAA,CACD,CAAA"}